/*
자판기라는 함수를 정의
자판기 함수를 처음에 실행되었을 때 "자판기가 가동되었습니다" 출력

최종 출력값은
잔돈이 0원이면 음료수 이름을 출력
잔돈이 있으면 이름과 잔돈을 출력

메뉴
솔의눈 300원
비타500 500원
콜라 1000원

없는 메뉴를 선택하면 존재하지 않는 상품입니다. 출력
만약, 투입금액이 선택한 음료수의 값보다 적을 경우 "금액이 부족합니다" 출력

함수의 인자는 (투입금액, 음료수명)
*/

function 자판기(coin, drink) {
    console.log("자판기가 가동되었습니다");

    const machine = { 솔의눈: 300, 비타500: 500, 콜라: 1000 };
    const price = machine[drink];
    const charge = coin - price;

    if (!price) return console.log("존재하지않는 상품입니다");
    if (price > coin) return console.log("금액이 부족합니다");

    if (charge === 0) return console.log(drink);
    if (charge >= 0.1) return console.log(charge);
}

자판기(400, "밀키스");

/*2번문제

당신은 편의점에서 야간 아르바이트를 하는 학생입니다 당신이 일하는 시간에 편의점에 채워놓을 물건이 들어오며 
당신은 재고의 개수와 물품이 맞는지 확인해야 합니다.
일의 순서는 아래와 같습니다.
1. 당신은 아래와 같은 전산표를 전달받습니다.

품목 갯수 야채곱창 5 바나나우유 10 삼각김밥 15 도시락 10 샌드위치 10

2. 당신은 물품을 세어본 후 해당 제품이 표의 갯수와 같은지 확인해야 합니다.

최종목표
1. 물품명과 갯수를 파라미터로 전달받는 함수를 만듭니다. 함수의 이름은 마음대로 하셔도 괜찮습니다.
2. 만약 표의 값과 갯수가 일치하지 않는다면
“전산표와 일치하지 않습니다”를 로그 합니다.
같다면
“전사표와 일치합니다“를 로그 합니다.
3. 전산표에 없는 물건이라면 확인을 위해 해당 물건의 이름을 콘솔에 로그 합니다.
ex) 함수명(물품명, 갯수);

결과값
”전산표와 일치합니다.“ (일치) 
”전산표와 일치하지 않습니다.“ (불일치) 
”바사삭치킨“ (품목 없음)
*/

function check(item, vol) {
    const store = {
        야채곱창: 5,
        바나나우유: 10,
        삼각김밥: 15,
        도시락: 10,
        샌드위치: 10,
    };
    const eat = store[item];

    if (!eat) return console.log("품목없음");

    for (i = 0; i < 5; i++) {
        if (eat === vol) return console.log("전산표와 일치합니다");
        if (eat !== vol) return console.log("전산표와 일치하지 않습니다");
    }
}
check("바나나우유", 5);
check("바사삭치킨", 1);

/* 1번문제

함수의 이름은 maxValue 입니다.
인자로는 정수들이 들어있는 배열을 파라미터로 전달받습니다. 배열로 전달받은 숫자 중 가장 큰 숫자와
숫자를 내림차순으로 정렬된 배열을 객체 형태로 반환해야 합니다.
ex)
const a = maxvalue([1,2,3,4,5]) console.log(a)
결과값 {
maxValue: 5,
sortArr = [5,4,3,2,1] }
 */

const sortArr = [1, 2, 3, 4, 5];
sortArr.sort((a, b) => b - a);

const maxValue = sortArr[0];

console.log(`maxValue: ${maxValue},`, `sortArr = [${sortArr}]`);

/* 
3번문제

당신이 구현하고하자 하는 함수는
배열과 정수를 파라미터로 전달 받습니다.
함수 이름은 정해지지 않았으니 마음대로 하셔도 괜찮습니다.
전달받은 배열은 정확히 각 요소마다 값을 10을 더 합니다.
이후 값이 10씩 더해진 배열에서, 나머지 파라미터로 전달받은 정수가 있는지 확인하여
값이 없다면 콘솔에 검사하고자 하는 값이 없다는 로그를 보인 후 함수를 종료하세요 값이 있다면 해당 숫자를 제외한 배열을 반환하는 함수를 만드세요.

최종 목표
1. 해당 함수는 배열과 검사하고자 하는 수를 파라미터로 전달 받습니다.
2. 해당 함수는 배열의 각 요소에 10을 더한 후 검사하고자 하는 수가 있는지 검사합니다. 
3. 만약 값이 없다면 결과값이 없습니다를 콘솔에 로그합니다.
4. 값이 있다면 검사하고자하는 수를 제외한 배열을 반환합니다.
5. 값이 없을 때 console.log에 undefined가 찍혀서는 안됩니다.
ex)
const arr = [1,2,3,4,5] const a =함수명(arr, 11) console.log (a)
결과값
[12,13,14,15] ( 값 있음 ) ”결과값이 없습니다“ ( 값 없음 )
 */

function plus(arr, y) {
    arr.map((item) => item + 10);

    // if (y !== arr.filter(item)) return console.log("값이 없습니다");
}

const arr = [1, 2, 3, 4, 5];
const a = plus(arr, 11);
console.log(a);

// undefined 나오는데ㅠㅠ 왜... 콜백함수 다시 공부해야겠다..
