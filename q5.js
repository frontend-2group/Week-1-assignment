/*
문제 5번
6/17 -- 최종 목표 5번 까지 구현 완료.
*/

/*
최종 목표
1. 시동이 걸리면 시동이 걸렸다는 메시지가 콘솔에 로그됩니다.

2. 시동이 꺼지면 시동이 꺼졌다는 메시지가 콘솔에 로그됩니다. 

3. 주행 중이면 최종 목표 거리까지 1km 단위로 콘솔에 거리가 로그됩니다. 

4. 최종 목표거리에 도달하면 주행이 완료되었다는 메시지가 콘솔에 로그됩니다. 

5. 최종 목표거리가 40km 이상인 상태에서 주행을 시도하면 안전 위험으로 시동을 종료했다는 메시지가 콘솔과 로그됨과 동시에 시동이 꺼집니다. 

6. 시동이 걸리지 않으면 주행을 할 수 없습니다. 

7. 시동이 걸려있는 상태에서 시동을 다시 걸 수 없습니다. 

8. 시동이 꺼져있는 상태에서 시동을 다시 끌 수 없습니다.
*/

/*
★ 코드 작성 전 생각 해보기.

car함수는 기능 3개가 담긴 객체를 반환해야함.

매개변수로는 최종거리까지의 숫자를 전달받음.

일단 기능 3개가 작동하는 함수를 구현하고
그 후 최종 목표 6,7,8번에 해당하는 기능 구현 해보자.


*/

function car(x) {
  let car = {
    on() {
      let a = "시동이 켜졌습니다.";
      return a;
    },

    off() {
      let b = "시동이 꺼졌습니다.";
      return b;
    },

    drive(num) {
      if (num > 40) {
        console.log("안전상에 이유로 시동이 꺼집니다.");
      } else {
        let i = 1;
        let c = num;
        while (i < c) {
          console.log("목표거리까지 " + (c - i) + "km 남았습니다.");
          i++;
          if (i === c) {
            console.log("주행이 완료되었습니다.");
          }
        }
      }
    },
  };

  return car;
}

const sonata = car();
console.log(sonata);

console.log(sonata.on());
console.log(sonata.off());
console.log(sonata.drive(5));
